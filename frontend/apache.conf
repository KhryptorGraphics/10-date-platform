# Virtual Host configuration for Apache

# Enable modules required for proxying and rewriting
<IfModule !proxy_module>
    LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
    LoadModule proxy_http_module modules/mod_proxy_http.so
</IfModule>
<IfModule !proxy_wstunnel_module>
    LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
</IfModule>
<IfModule !rewrite_module>
    LoadModule rewrite_module modules/mod_rewrite.so
</IfModule>

# Virtual Host configuration
<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    DocumentRoot /usr/local/apache2/htdocs
    
    # Health check endpoint
    <Location "/health">
        SetHandler none
        RewriteEngine On
        RewriteRule .* - [R=200,L]
        Header set Content-Type "text/plain"
    </Location>
    
    # Enable proxying
    ProxyPreserveHost On
    ProxyRequests Off
    
    # API endpoints
    ProxyPass /api http://backend:3000/api
    ProxyPassReverse /api http://backend:3000/api
    
    # WebSocket connections for chat
    ProxyPass /socket.io ws://backend:3000/socket.io
    ProxyPassReverse /socket.io ws://backend:3000/socket.io
    
    # Frontend routes handled by React Router - rewrite all non-file requests to index.html
    <Directory "/usr/local/apache2/htdocs">
        RewriteEngine On
        RewriteBase /
        # If the requested resource exists as a file or directory, serve it directly
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        # Otherwise, rewrite all requests to the index.html
        RewriteRule ^ index.html [L]
        
        # Set CORS headers
        Header set Access-Control-Allow-Origin "*"
        Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Header set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    </Directory>
    
    # Error logs
    ErrorLog logs/error.log
    CustomLog logs/access.log combined
    
    # Set security headers
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Enable HTTP Strict Transport Security (HSTS) in production
    # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
</VirtualHost>